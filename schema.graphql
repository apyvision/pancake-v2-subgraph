type UniswapFactory @entity {
  # factory address
  id: ID!
  # pair info
  pairCount: Int!
}

type Token @entity {
  # token address
  id: ID!

  # mirrored from the smart contract
  symbol: String!
  # derived prices
  derivedETH: BigDecimal

  name: String!
  decimals: BigInt!
}

type Pair @entity {
  # pair address
  id: ID!

  # mirrored from the smart contract
  token0: Token!
  token1: Token!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal!

  # derived liquidity
  reserveETH: BigDecimal!
  reserveUSD: BigDecimal!
  trackedReserveETH: BigDecimal! # used for separating per pair reserves and global
  # Price in terms of the asset pair
  token0Price: BigDecimal!
  token1Price: BigDecimal!

}


# stores for USD calculations
type Bundle @entity {
  id: ID!
  ethPrice: BigDecimal! # price of ETH usd
}

type TokenDayData @entity {
  id: ID!
  date: Int!
  token: Token!

  # price stats
  priceUSD: BigDecimal!
}
